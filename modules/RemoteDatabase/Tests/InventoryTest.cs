//------------------------------------------------------------------------------
// <auto-generated>
//     Ezt a kódot eszköz generálta.
//     Futásidejű verzió:4.0.30319.0
//
//     Ennek a fájlnak a módosítása helytelen viselkedést eredményezhet, és elvész, ha
//     a kódot újragenerálják.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using System;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using System.Collections.Generic;

using Unturned.Entity;

namespace Unturned
{
	[TestFixture()]
	public class InventoryTest
	{
		[Test()]
		public void TestCase ()
		{
		}

		[Test]
		public void TestInventorySerializateion()
		{
			PlayerInventory playerInventory = new PlayerInventory(8,5,20);
			playerInventory.Items = new List<InventoryItem>();

			for ( int i=0; i<10; i++ )
			{
				playerInventory.Items.Add(new InventoryItem(i, 24, "asd", i, 0));
			}

			XmlSerializer serializer = new XmlSerializer(typeof(PlayerInventory));
			MemoryStream memStream = new MemoryStream();
			StreamWriter writer = new StreamWriter(memStream);
			serializer.Serialize(writer, playerInventory);

			writer.Flush();
			memStream.Seek(0, SeekOrigin.Begin);

			Console.WriteLine( new StreamReader(memStream).ReadToEnd() );
		}

		[Test]
		public void testRemotePlayer()
		{
			IDataHolder dataHolder = new RemoteDatabase();
			dataHolder.Init();

			Player player = dataHolder.LoadPlayer("76561197994222727");

			Console.WriteLine( "SteamID: " + player.ToString() );
			Console.WriteLine( "Inventory: " + player.Inventory.ToString() );
			Console.WriteLine( "Life: " + player.Life.ToString() );
			Console.WriteLine( "Inventory item count: " + player.Inventory.Items.Count );
		}
	}
}

