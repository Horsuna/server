//
//  Author:
//    Paál Gyula paalgyula@gmail.com
//
//  Copyright (c) 2015, (c) GW-Systems Kft. All Rights Reserved!
//
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
//
//     * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in
//       the documentation and/or other materials provided with the distribution.
//     * Neither the name of the [ORGANIZATION] nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
//  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
//  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
//  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
//  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
//  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
//  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
//  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
//  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//------------------------------------------------------------------------------
// <auto-generated>
//     Ezt a kódot eszköz generálta.
//     Futásidejű verzió:4.0.30319.18444
//
//     Ennek a fájlnak a módosítása helytelen viselkedést eredményezhet, és elvész, ha
//     a kódot újragenerálják.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.IO;
using System.Text;
using System.Net;
using System.Threading;
using System.Xml.Serialization;
using UnityEngine;

namespace Unturned
{
    public class RestClient
    {
        private static readonly string m_userAgent = "Unturned";
        private static readonly string m_xmlContentType = "application/xml";

        public delegate void ResponseProcessDelegate(Stream response);

        private RestClient()
        {
        }

        public static StreamReader PostRequest(String url, System.Object serializable)
        {
            return null; 


            HttpWebRequest req = WebRequest.Create(url) as HttpWebRequest;
            req.Accept = m_xmlContentType;


            // Serializing into the stream
            MemoryStream stream = new MemoryStream();
            TextWriter writer = new StreamWriter(stream, Encoding.UTF8);
            XmlSerializer serializer = new XmlSerializer(serializable.GetType());
            serializer.Serialize(writer, serializable);
            
            // If required by the server, set the credentials.
            //request.Credentials = CredentialCache.DefaultCredentials;
            
            // Get the response.
            stream.Seek(0, SeekOrigin.Begin);
            StreamReader streamReader = new StreamReader(stream, System.Text.Encoding.UTF8);
            //return request.DoPost(streamReader.ReadToEnd());
        }

        public static void GetRequest(String url, ResponseProcessDelegate processResponse)
        {
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
            request.Accept = m_xmlContentType;
            request.Credentials = CredentialCache.DefaultCredentials;
            request.UserAgent = m_userAgent;


        }
    }
}

